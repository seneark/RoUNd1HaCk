{"version":3,"sources":["Components/InputField.js","Components/Content.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["InputField","isPortrait","useMediaQuery","query","classes","makeStyles","theme","root","width","color","borderBottomColor","borderColor","useStyles","React","useState","value","setValue","correct","setCorrect","className","noValidate","autoComplete","TextField","id","label","placeholder","onChange","event","target","inputProps","style","multiline","display","justifyContent","margin","Button","variant","button","endIcon","onClick","process","toLowerCase","toString","NotificationManager","success","error","href","disabled","StyledTableCell","withStyles","createStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","TableRow","createData","name","calories","rows","table","minWidth","Content","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","map","row","key","scope","Footer","textAlign","flexDirection","border","padding","App","top","delay","bottom","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.12e661c1.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n\tNotificationManager,\n} from \"react-notifications\";\n\nconst InputField = () => {\n\tconst isPortrait = useMediaQuery({ query: \"(orientation: portrait)\" });\n\n\tconst useStyles = makeStyles((theme) => ({\n\t\troot: {\n\t\t\t\"& .MuiTextField-root\": {\n\t\t\t\twidth: isPortrait ? \"100%\" : \"50vw\",\n\t\t\t\tcolor: \"white\",\n\t\t\t},\n\t\t\t\"& .MuiInputLabel-root\": {\n\t\t\t\tcolor: \"#69779b\",\n\t\t\t},\n\n\t\t\t\"& label.Mui-focused\": {\n\t\t\t\tcolor: \"#69779b\",\n\t\t\t},\n\t\t\t\"& .MuiInput-underline:after\": {\n\t\t\t\tborderBottomColor: \"#69779b\",\n\t\t\t},\n\t\t\t\"& .MuiOutlinedInput-root\": {\n\t\t\t\t\"& fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t\t\"&:hover fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t\t\"&.Mui-focused fieldset\": {\n\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t}));\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(\"\");\n\tconst [correct, setCorrect] = React.useState(false);\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t};\n\tconst handleAnswer = () => {\n\t\tif (value.toLowerCase().toString() === process.env.REACT_APP_ANSWER) {\n\t\t\tsetCorrect(true);\n\t\t\tNotificationManager.success(\n\t\t\t\t\"Click on Next Round\",\n\t\t\t\t\"Correct Answer\"\n\t\t\t);\n\t\t} else {\n\t\t\tsetCorrect(false);\n\t\t\tNotificationManager.error(\"Keep Trying\", \"Wrong Answer\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"standard-textarea\"\n\t\t\t\t\tlabel=\"Enter the Answer here\"\n\t\t\t\t\tplaceholder=\"Answer\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tinputProps={{ style: { color: \"white\" } }}\n\t\t\t\t\tmultiline\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\t\t\twidth: isPortrait ? \"100%\" : \"50vw\",\n\t\t\t\t\t\tmargin: \"auto\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tendIcon={<CloudUploadIcon />}\n\t\t\t\t\t\tonClick={handleAnswer}\n\t\t\t\t\t>\n\t\t\t\t\t\tVerify Answer\n\t\t\t\t\t</Button>\n\t\t\t\t\t{correct ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\thref={process.env.REACT_APP_NEXT_ROUND}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNext Round\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tborderColor: \"#69779b\",\n\t\t\t\t\t\t\t\tcolor: \"#69779b\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAnswer to activate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t<br />\n\t\t</div>\n\t);\n};\n\nexport default InputField;\n","import React from \"react\";\nimport InputField from \"./InputField\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n\twithStyles,\n\tTheme,\n\tcreateStyles,\n\tmakeStyles,\n} from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n\tcreateStyles({\n\t\thead: {\n\t\t\tbackgroundColor: theme.palette.common.black,\n\t\t\tcolor: theme.palette.common.white,\n\t\t},\n\t\tbody: {\n\t\t\tfontSize: 14,\n\t\t},\n\t})\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: \"Theme\") =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tbackgroundColor: \"#272c34\",\n\t\t\tcolor: \"white\",\n\t\t},\n\t})\n)(TableRow);\n\nfunction createData(name: string, calories: string) {\n\treturn { name, calories };\n}\n\nconst rows = [\n\tcreateData(\"2zsds44@dfa\", \"FreEdonia\"),\n\tcreateData(\"4aerdfsg4343#$err44\", \"fREedONia\"),\n];\n\nconst useStyles = makeStyles({\n\ttable: {\n\t\tminWidth: 100,\n\t},\n});\n\nconst Content = () => {\n\tconst classes = useStyles();\n\n\tconst isPortrait = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\treturn (\n\t\t<div\n\t\t\tclassName=\"Content\"\n\t\t\tstyle={{\n\t\t\t\twidth: isPortrait ? \"90%\" : \"70%\",\n\t\t\t}}\n\t\t>\n\t\t\t<h1>Find Binod's Country</h1>\n\t\t\t<p>\n\t\t\t\tThe mysterious guy BINOD has been abducted, we know nothing\n\t\t\t\tabout his location. Terrorists took him into secret hiding and\n\t\t\t\tthus he is missing. But they left a clue about which country\n\t\t\t\tthey fled to.<br/> The clue says : <br />\n\t\t\t\tWe are all the same. All the same. Longing to find our way back.\n\t\t\t\tBack to the one. Back to the only one!\n\t\t\t</p>\n\t\t\t\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table className={classes.table} aria-label=\"customized table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<StyledTableCell>Sample Input</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>Sample Output</StyledTableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t\t<StyledTableRow key={row.name}>\n\t\t\t\t\t\t\t\t<StyledTableCell\n\t\t\t\t\t\t\t\t\tcomponent=\"th\"\n\t\t\t\t\t\t\t\t\tscope=\"row\"\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"white\" }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{row.name}\n\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t\t<StyledTableCell style={{ color: \"white\" }}>\n\t\t\t\t\t\t\t\t\t{row.calories}\n\t\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<h2>Question:</h2>\n\t\t\t<p>\n\t\t\t\tYou have the responsibility to complete the mission , decode the\n\t\t\t\toutput of the given message to find the country name.\n\t\t\t</p>\n\t\t\t<TableContainer component={Paper}>\n\t\t\t\t<Table className={classes.table} aria-label=\"customized table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<StyledTableCell>Sample Input</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>Sample Output</StyledTableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t<StyledTableRow>\n\t\t\t\t\t\t\t<StyledTableCell\n\t\t\t\t\t\t\t\tcomponent=\"th\"\n\t\t\t\t\t\t\t\tscope=\"row\"\n\t\t\t\t\t\t\t\tstyle={{ color: \"white\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t6adsafda@#sdfdf$%%\n\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell style={{ color: \"#e33371\" }}>\n\t\t\t\t\t\t\t\tFind the Answer\n\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<br />\n\n\t\t\t<InputField />\n\t\t</div>\n\t);\n};\n\nexport default Content;\n","import React from \"react\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nimport { useMediaQuery } from \"react-responsive\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Footer = () => {\n\tconst isPortrait = useMediaQuery({ query: \"(max-width: 1224px)\" });\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t\tfontSize: 25,\n\t\t\t\tmargin: \"auto\",\n\t\t\t\twidth: isPortrait ? \"90%\" : \"70%\",\n\t\t\t\tdisplay: \"flex\",\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\tflexDirection: \"column\",\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tborder: \"1px solid #fbecec\",\n\t\t\t\t\tpadding: \"20px 10px\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<p\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfontSize: 20,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tIf you wish to quit in this round, make sure you fill the\n\t\t\t\t\tform by clicking the button below. This is important as it\n\t\t\t\t\twill count your participation.\n\t\t\t\t</p>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\thref=\"https://forms.gle/cbrJKSdXTcMqfzky9\"\n\t\t\t\t>\n\t\t\t\t\tClick here to submit you participation!\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<p>\n\t\t\t\tFollow us on{\" \"}\n\t\t\t\t<a href=\"https://www.instagram.com/d_coder_dtu/\">\n\t\t\t\t\t<InstagramIcon style={{ fontSize: 25 }} />\n\t\t\t\t</a>{\" \"}\n\t\t\t\t<a href=\"https://www.linkedin.com/company/dcoder/\">\n\t\t\t\t\t<LinkedInIcon style={{ fontSize: 25 }} />\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"react-notifications/lib/notifications.css\";\n\nimport Bounce from \"react-reveal/Bounce\";\nimport Content from \"./Components/Content\";\nimport Footer from \"./Components/Footer\";\n\nimport { NotificationContainer } from \"react-notifications\";\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div>\n\t\t\t\t\t<Bounce top>\n\t\t\t\t\t\t<h1>TechQuest - HackIT</h1>\n\t\t\t\t\t</Bounce>\n\t\t\t\t\t<Bounce top delay=\"200\">\n\t\t\t\t\t\t<h2 className=\"Heading\">Round 1</h2>\t\t\t\t\t\t\n\t\t\t\t\t</Bounce>\n\t\t\t\t\t<Bounce top delay=\"600\">\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Bounce>\n\t\t\t\t</div>\n\t\t\t\t<Bounce bottom>\n\t\t\t\t<Footer />\n\t\t\t\t</Bounce>\n\n\t\t\t\t<NotificationContainer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}